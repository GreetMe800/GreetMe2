@using GreetMe_MVC.Interfaces
@model GreetMe_MVC.ViewModels.View.ViewDetail

@{
    ViewData["Title"] = "Details";
}


<style>
    body{
        margin:0;
        padding 0;
    }
    #container{
        overflow:hidden;

        margin:0 auto;
    }
    .col1{
        width:500px;
        height: 100px;
        float: left;
    }

    .col2 {
        width: 1000px;
        height: 100px;
        float: left;
    }
</style>






<body>

    @{
        int style = 0;
        int component = 0;
        foreach(int s in Model.Style)
        {
            if(Model.Style[style] == 0)
            {

                                      <br></br>
                style++;
            }
            else if (Model.Components[component] is BirthdayComponent)
            {
                @Html.Partial("_Birthday", Model.Components[component]);
                
                
                
                style++;
                component++;
            }
            else if (Model.Components[component] is AnniversaryComponent)
            {
                @Html.Partial("_Anniversary", Model.Components[component])
                ;
                style++;
                component++;
            }
            else if (Model.Components[component] is MenuComponent)
            {
                <p>throw not implementet Menu, panik</p>
                style++;
                component++;
            }
        }
    }


    @*@{
        for(int i = 0; i < Model.Style.Length/2; i++)
        {
            for (int j = 0; j < 2; j++)
               {
                
                if (Model.Style[i, j] == "fill")
                {
                        <div id="container">
                            <div class=" col1">
                            
                                <h2>@Model.components[Model.CurrentLocation].getData()</h2>
                                
                            </div>

                        </div>

                }
                else if (Model.Style[i, j] == "double")
                {
                        <div id="container">
                            <div class=" col3">
                            
                            

                                <h2>@Model.components[Model.CurrentLocation].getDataDouble()</h2>
                                @{
                                j += 2;
                                }
                                
                            </div>

                        </div>

                    Model.CurrentLocation++;
                }
                else if (Model.Style[i, j] == "empty")
                {
                        <div id="container">
                            <div class=" col1">

                            <pre></pre>
                        </div>
                        </div>

                }


            }




        }
    }*@


    @*@{
        for (int i = 0; i < (Model.Style.Length / 2); i++)
        {
            if (Model.Style[i, 0] == "fill")
            {
                <div id="container">
                    <div class=" col1">
                         <h2>@Model.components[Model.CurrentLocation].getData()</h2>
                         @Model.CurrentLocation++;
                    </div>

                </div>
               
            }
            else if (Model.Style[i, 0] == "double")
            {
                <div id="container">
                    <div class=" col1">
                        
                        <h2>@Model.components[Model.CurrentLocation].getDataDouble()</h2>
                        @Model.CurrentLocation++;
                    </div>

                </div>
               
                Model.CurrentLocation++;
            }
            else if (Model.Style[i, 0] == "empty")
            {
                <div id="container">
                    <div class=" col1">
                        <h2>@Model.components[Model.CurrentLocation].getData()</h2>
                        <h2>empty column</h2>
                       
                    </div>

                </div>
                
            }


        }
    }
    

    <div id="container">
        <div class=" col2">
            @{

                for (int i = 0; i < (Model.Style.Length / 2); i++)
                {

                    string test = Model.Style[i, 1];
                    if (Model.Style[i, 1] == "fill")
                    {
                        <h2>@Model.components[Model.CurrentLocation].getData()</h2>
                        Model.CurrentLocation++;
                    }
                    else if (Model.Style[i, 1] == "double")
                    {
                        <h2>@Model.components[Model.CurrentLocation].getDataDouble()</h2>
                        Model.CurrentLocation++;
                    }
                    else if (Model.Style[i, 1] == "empty")
                    {
                        <h2>empty column</h2>
                    }


                }
            }
        </div>

    </div>*@
</body>



